"""\nA minimal stochastic-click user for implicit-feedback logs.\n\nCTR ≈ sigmoid(α · ranker_score + β · expl_quality + ζ_u + ε)\n• ranker_score: logit from frozen SASRec for target item\n• expl_quality : length(tokens) / 40  (≈1 if long)\n• ζ_u ~ N(0, σ_user)  fixed per user\nHyper-parameters taken from paper appendix.\n"""\nimport numpy as np, tensorflow as tf, recsim_ng.core as rc\nfrom recsim_ng.entities.choice import softmax_with_temperature\n\nclass SimpleUser(rc.entity.Entity):\n    _state_fields = {\n        "user_bias": tf.TensorSpec(shape=(), dtype=tf.float32)\n    }\n    def __init__(self, sigma=0.3, name="user"):\n        super().__init__(name=name)\n        self._sigma = sigma\n    def initial_state(self):\n        return {"user_bias": tf.random.normal([], stddev=self._sigma)}\n    def next_state(self, previous_state, slate, responses, time_step):\n        return previous_state  # memoryless for simplicity\n    def next_response(self, state, slate_docs, scores, expl_qual):\n        α, β = 1.0, 0.5\n        logits = α*scores + β*expl_qual + state["user_bias"]\n        probs  = tf.squeeze(tf.math.sigmoid(logits))\n        click  = tf.cast(\n            tf.less(tf.random.uniform(tf.shape(probs)), probs), tf.float32)\n        return {"clicked": click}
